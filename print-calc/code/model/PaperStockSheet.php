<?php

namespace PC;

use BB\PaperDensity;
use BB\PaperFormat;
use BB\PaperType;

/** 
 * This class has been auto-generated by the SS importer module
 * 
 * @property int A1SheetsPerItem 
 * @property string ColorProfile 
 * @property float Cost 
 * @property float Height 
 * @property bool IsColor 
 * @property bool IsCover 
 * @property bool IsSingleSide 
 * @property bool IsVisible 
 * @property string Name 
 * @property integer PaperWeightID 
 * @property int SizeX 
 * @property int SizeY 
 * @property int SortOrder 
 * @method \HasManyList CalculationRequests()
 * @method MachinePaperWeight PaperWeight()
 * @method PaperFormat PaperFormat()
 * @method PaperType PaperType()
 * @method PaperDensity PaperDensity()
 * @property int PaperFormatID
 * @property int PaperTypeID
 * @property int PaperDensityID
 */

class PaperStockSheet extends \DataObject {
    
    private static $singular_name = "Paper Stock Sheet";
    
    private static $plural_name = "Paper Stock Sheets";
    
    private static $db = array(
        'Name' => 'Varchar',
        'Height' => 'Float',
        'Cost' => 'Decimal(16)',
        'IsSingleSide' => 'Boolean',
        'IsColor' => 'Boolean',
        'IsCover' => 'Boolean',
        'ColorProfile' => 'Varchar',
        'IsVisible' => 'Boolean',
        'SortOrder' => 'Int',
    );

    private static $has_many = array(
    );

    private static $has_one = array(
        'PaperType' => 'BB\PaperType',
        'PaperFormat' => 'BB\PaperFormat',
        'PaperDensity' => 'BB\PaperDensity',
    );

    private static $belongs_many_many = array(
    );

    public function getSizeX() {
        return $this->PaperFormat()->Width;
    }

    public function getSizeY() {
        return $this->PaperFormat()->Height;
    }



    /* ----- Table content ----- */
    /**
     * @return \DataList|static[]
     */
    public static function getPaperForCover() {
        return PaperStockSheet::get()->filter('IsCover',1)->sort('SortOrder ASC');
    }

    /**
     * @return \DataList|static[]
     */
	public static function getPaperForBlock() {
        $res = PaperStockSheet::get()->sort('SortOrder ASC');
                
        if (isset($is_color) && ($is_color)) {
        	$res = $res->filter('IsColor', 1);
        }
         
        return $res;
    }


}
